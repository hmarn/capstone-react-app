# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2

jobs: 
  build-frontend:
    docker:
      # Use the same Node base as ./Dockerfile
      - image: cimg/node:14.19.0
    steps:
      - checkout
      - restore_cache:
          key: frontend-build-{{ checksum "./package-lock.json" }}
      - run:
          name: Build front-end
          command: |
            sudo npm install
            npm run build
      - save_cache:
          paths: [./frontend/node_modules]
          key: frontend-build-{{ checksum "./package-lock.json" }}

  test-frontend:
    docker:
      # Use the same Node base as ./Dockerfile
      - image: cimg/node:14.19.0
    steps:
      - checkout
      - restore_cache:
          key: frontend-build-{{ checksum "./package-lock.json" }}
      - run:
          name: Test front-end
          command: |
            sudo npm install
            npm run test

  eslint-frontend:
    docker:
      # Use the same Node base as ./Dockerfile
      - image: cimg/node:14.19.0
    steps:
      - checkout
      - restore_cache:
          key: frontend-build-{{ checksum "./package-lock.json" }}
      - run:
          name: Eslint front-end
          command: |
            sudo npm install
            npm run lint

  upload-docker:
    docker:
      - image: cimg/python:3.7.16
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - run:
          name: Build docker container
          command: |
            docker build --tag=$DOCKER_IMAGE_NAME .
            docker image ls
      - run:
          name: Upload Docker to Dockerhub
          command: |
            echo "Docker ID and Image: $DOCKER_IMAGE_NAME"
            docker login -u="$DOCKERHUB_USERNAME" -p="$DOCKERHUB_PASSWORD"
            docker tag $DOCKER_IMAGE_NAME $DOCKERHUB_USERNAME/$DOCKER_IMAGE_NAME:${CIRCLE_WORKFLOW_ID:0:7}
            docker push $DOCKERHUB_USERNAME/$DOCKER_IMAGE_NAME:${CIRCLE_WORKFLOW_ID:0:7}
          
workflows:
  version: 2
  default:
    jobs:
      - build-frontend
      - test-frontend:
          requires:
            - build-frontend
      - eslint-frontend:
          requires:
            - build-frontend
      - upload-docker:
          requires: [test-frontend, eslint-frontend]

      