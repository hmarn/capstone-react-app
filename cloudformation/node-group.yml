Description: >
    HMarn / Udacity Capstone Project
    This template deploys IAM role and EKS NodeGroup.
    
Parameters:
    ID:
        Description: Unique identifier.
        Type: String

    AMITypetoUse:
        Description: An AMI name for node group instance.
        Type: String
        Default: AL2_x86_64
    
    CapacityToUse:
        Description: An capacity for node group instance.
        Type: String
        Default: ON_DEMAND
    
    InstanceToUse:
        Description: An capacity for node group instance.
        Type: String
        Default: t3.micro

Resources:
    EKSClusterNodeRole:
        Type: AWS::IAM::Role
        Properties:
            RoleName: !Sub cluster-node-role-${ID}
            AssumeRolePolicyDocument:
                Version: "2012-10-17"
                Statement:
                    - Effect: Allow
                      Principal:
                        Service:
                            - ec2.amazonaws.com
                      Action:
                        - sts:AssumeRole
            Path: "/"
            ManagedPolicyArns:
                - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
                - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
                - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
            Tags:
                - Key: Name
                  Value: !Sub EKSClusterNodeRole-${ID}
                        
    EKSNodeGroup:
        Type: AWS::EKS::Nodegroup
        Properties:
            AmiType: !Ref AMITypetoUse
            CapacityType: !Ref CapacityToUse
            InstanceTypes:
                - !Ref InstanceToUse
            Labels: 
                Key : Value
            DiskSize: 20
            ClusterName: !Sub cluster-${ID}
            NodeRole: !GetAtt EKSClusterNodeRole.Arn
            NodegroupName: !Sub nodegroup-${ID}
            ScalingConfig:
                MinSize: 2
                MaxSize: 2
                DesiredSize: 2
            Subnets:
                Fn::Split:
                    - ","
                    - Fn::ImportValue:
                            Fn::Sub: ${ID}-PUB-NETS
            Tags:
                Key: Name
                Value: !Sub NodeGroup-${ID}

Outputs:
    EKSClusterNodeRole:
        Description: Role for accessing and creating aws resources
        Value: !GetAtt EKSClusterNodeRole.Arn
        Export:
            Name: !Sub EKSClusterNodeRole-${ID}

    EKSNodeGroup:
        Description: NodeGroup id
        Value: !Ref EKSNodeGroup
        Export:
            Name: !Sub NodeGroup-${ID}
